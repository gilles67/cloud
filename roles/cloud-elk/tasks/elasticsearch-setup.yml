---
- name: "Add dns record Elasticseach"
  nsupdate:
    key_name: "tsig-{{ nsupdate.zone }}"
    key_algorithm: "{{ nsupdate.tsig.algorithm | default('hmac-sha256') }}"
    key_secret: "{{ nsupdate.tsig.secret }}"
    server: "{{ nsupdate.server }}"
    zone: "{{ nsupdate.zone }}"
    type: "AAAA"
    record: "{{ features.elk.elasticsearch.hostname }}."
    value: "{{ features.elk.elasticsearch.ipv6 }}"
  when:
    - nsupdate.zone is defined
    - nsupdate.tsig is defined
    - nsupdate.server is defined
    - features.elk.elasticsearch.hostname is defined
    - features.elk.elasticsearch.ipv6 is defined

- name: "Create Elasticseach data volume"
  docker_volume:
    name: "elk_elasticsearch_{{ features.elk.elasticsearch.name }}_data"
    state: present

- name: "Create Elasticseach container"
  docker_container:
    name: "elk.elasticsearch.{{ features.elk.elasticsearch.name }}"
    state: present
    restart_policy: unless-stopped
    image: "elasticsearch:{{ elasticsearch_version }}"
    volumes:
      - "elk_elasticsearch_{{ features.elk.elasticsearch.name }}_data:/usr/share/elasticsearch/data"
    env:
      TZ: "{{ timezone }}"
      "node.name": "{{ features.elk.elasticsearch.name }}"
      "discovery.type": "single-node"
      "bootstrap.memory_lock": "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      docker.network: "{{ features.elk.network }}"
    networks_cli_compatible: yes
    networks:
      - name: "{{ features.elk.network }}"
        ipv6_address: "{{ features.elk.elasticsearch.ipv6 }}"

- name: "Start Elasticseach container"
  docker_container:
    name: "elk.elasticsearch.{{ features.elk.elasticsearch.name }}"
    state: started