---
# Install docker repo key
- name: Install Docker repository key
  # apt_key:
  #   url: https://download.docker.com/linux/ubuntu/gpg
  # get_url:
  #   url: https://download.docker.com/linux/ubuntu/gpg
  #   dest: /usr/share/keyrings/docker.gpg
  #   mode: 0644
  #   force: true
  shell:  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --yes --dearmor -o /usr/share/keyrings/docker.gpg

# Install docker repo
- name: Install Docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    filename: docker
    state: present
  when: 
    - ansible_architecture == "x86_64"

- name: Install Docker repository
  apt_repository:
    repo: "deb [arch=arm64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    state: present
  when: 
    - ansible_architecture == "aarch64"


# Install docker packages
- name: Install Docker packages
  apt:
    name: "{{ item }}"
    install_recommends: no
    update_cache: yes
  loop: 
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - python3-docker
    - python3-dnspython
    - nfs-common

- name: Enable Docker
  systemd:
    name: docker
    enabled: yes
    masked: no

- name: Configure Docker
  template:
    src: daemon.json.j2
    dest: "/etc/docker/daemon.json"
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart_docker
  register: docker_daemon_update

- name: "Force Docker restart when daemon file changed"
  service:
    name: docker
    state: restarted
  when: docker_daemon_update.changed
