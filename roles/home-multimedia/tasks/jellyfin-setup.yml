---
- name: "Jellylfin Hardware Acceleration"
  include: "jellyfin-hw.yml"

- name: "Jellylfin DNS Registration"
  include: "jellyfin-dns.yml"

- name: "Firewall Jellyfin outbound"
  ufw:
    rule: allow
    route: yes
    src: "{{ features.multimedia.jellyfin.ipv6 }}"
    dest: "::/0"
    proto: "tcp"
    port: "{{ item }}"
  loop: 
    - "80"
    - "443"
    - "9001"

- name: "Create Jellyfin volumes"
  docker_volume:
    name: "jellyfin_{{ item }}"
    state: present
  loop:
    - "config"
    - "cache"

- name: "Create Jellyfin container"
  docker_container:
    name: "jellyfin"
    state: present
    restart_policy: unless-stopped
    image: "jellyfin/jellyfin:{{ jellyfin_version }}"
    volumes:
      - "jellyfin_config:/config"
      - "jellyfin_cache:/cache"
      - "{{ features.multimedia.media }}:/media"
    devices:
      - "/dev/dri/renderD128"
      - "/dev/dri/card0"
    env:
      TZ: "{{ timezone }}"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      one.h42.backup.enable: "true"
      one.h42.backup.profile: "volume"
      one.h42.backup.volume.ignore: "jellyfin_cache"
      docker.network: "{{ features.multimedia.network }}"
      traefik.enable: "true"
      traefik.http.routers.jellyfin.rule: "Host(`{{ features.multimedia.jellyfin.hostname }}`)"
      traefik.http.routers.jellyfin.entrypoints: "web"
      traefik.http.routers.jellyfin.middlewares: "httpsredirect@file"
      traefik.http.routers.jellyfin-ssl.rule: "Host(`{{ features.multimedia.jellyfin.hostname }}`)"
      traefik.http.routers.jellyfin-ssl.entrypoints: "websecure"
      traefik.http.routers.jellyfin-ssl.middlewares: "jellyfinmw@file"
      traefik.http.routers.jellyfin-ssl.tls.certresolver: "letsencrypt"
      traefik.http.routers.jellyfin-ssl.tls.options: "intermediate@file"
      traefik.http.services.jellyfin-ssl.loadbalancer.server.port: "8096"
    networks_cli_compatible: yes
    networks:
      - name: "{{ features.multimedia.network }}"
        ipv6_address: "{{ features.multimedia.jellyfin.ipv6 }}"

- name: "Start Jellyfin container"
  docker_container:
    name: "jellyfin"
    state: started
