---
- name: "Setup Zigbee adapter"
  include: "setup-zigbee.yml"
  when: 
    - features.hass.adapter.zigbee is defined

- name: "Create HomeAssistant data volume"
  docker_volume:
    name: "hass_data"
    state: present

- name: "Add dns record for Homeassitant"
  nsupdate:
    key_name: "tsig-{{ nsupdate.zone }}"
    key_algorithm: "{{ nsupdate.tsig.algorithm | default('hmac-sha256') }}"
    key_secret: "{{ nsupdate.tsig.secret }}"
    server: "{{ nsupdate.server }}"
    zone: "{{ nsupdate.zone }}"
    type: "CNAME"
    record: "{{ features.hass.hostname }}."
    value: "{{ features.hass.proxy.admin_hostname }}."
  when:
    - nsupdate.zone is defined
    - nsupdate.tsig is defined
    - nsupdate.server is defined
    - features.hass.proxy.admin_hostname is defined
    - features.hass.hostname is defined

- name: "Create HomeAssistant container"
  docker_container:
    name: "hass"
    state: present
    restart_policy: unless-stopped
    image: "homeassistant/home-assistant:{{ homeassistant_version }}"
    env:
      TZ: "{{ timezone }}"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      docker.network: "{{ features.hass.network }}"
      traefik.enable: "true"
      traefik.http.routers.hass.rule: "Host(`{{ features.hass.hostname }}`)"
      traefik.http.routers.hass.entrypoints: "web"
      traefik.http.routers.hass.middlewares: "httpsredirect@file"
      traefik.http.routers.hass-ssl.rule: "Host(`{{ features.hass.hostname }}`)"
      traefik.http.routers.hass-ssl.entrypoints: "websecure"
      traefik.http.routers.hass-ssl.middlewares: "hsts@file,httpsredirect@file"
#      traefik.http.routers.hass-ssl.middlewares: "header-hass,auth-hass,hsts@file,httpsredirect@file"
#      traefik.http.middlewares.auth-hass.forwardauth.address: "https://{{ current_item.database.admin_authforward }}/forward/auth"
#      traefik.http.middlewares.auth-hass.forwardauth.trustForwardHeader: "true"
#      traefik.http.middlewares.header-hass.headers.customrequestheaders.X-Auth-Service: "{{ current_item.database.admin_hostname }}"
      traefik.http.routers.hass-ssl.tls.certresolver: "letsencrypt"
      traefik.http.routers.hass-ssl.tls.options: "intermediate@file"
      traefik.http.services.hass-ssl.loadbalancer.server.port: "8123"
    networks_cli_compatible: yes
    networks:
      - name: "{{ features.hass.network }}"
        ipv6_address: "{{ features.hass.ipv6 }}"
    links:
      - "hass.broker"
      - "hass.mariadb"

- name: "Firewall HomeAssistant outbound"
  ufw:
    rule: allow
    route: yes
    src: "{{ features.hass.ipv6 }}"
    dest: "::/0"
    proto: "tcp"
    port: "{{ item }}"
  loop: 
    - "80"
    - "443"

- name: "Start HomeAssistant container"
  docker_container:
    name: "hass"
    state: started
  notify: reload_ufw