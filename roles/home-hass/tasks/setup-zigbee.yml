---
- name: "Add dns record for Zigbee2mqtt"
  nsupdate:
    key_name: "tsig-{{ nsupdate.zone }}"
    key_algorithm: "{{ nsupdate.tsig.algorithm | default('hmac-sha256') }}"
    key_secret: "{{ nsupdate.tsig.secret }}"
    server: "{{ nsupdate.server }}"
    zone: "{{ nsupdate.zone }}"
    type: "CNAME"
    record: "{{ features.hass.adapter.zigbee.hostname }}."
    value: "{{ features.hass.proxy.hostname }}."
  when:
    - nsupdate.zone is defined
    - nsupdate.tsig is defined
    - nsupdate.server is defined
    - features.hass.proxy.hostname is defined
    - features.hass.adapter.zigbee.hostname is defined

- name: "Create Zigbee2MQTT data volume"
  docker_volume:
    name: "hass_zigbee_data"
    state: present

- name: "Create Zigbee2MQTT folder"
  file:
    path: "/opt/home/hass/zigbee/"
    state: directory
    recurse: yes

- name: "Create Zigbee2MQTT container"
  docker_container:
    name: "hass.zigbee"
    state: present
    restart_policy: unless-stopped
    image: "koenkk/zigbee2mqtt:{{ zigbee2mqtt_version }}"
    volumes:
      - "hass_zigbee_data:/app/data"
      - "/opt/home/hass/zigbee/configuration.yaml:/app/data/configuration.yaml"
    devices:
      - "{{ features.hass.adapter.zigbee.device }}"
    env:
      TZ: "{{ timezone }}"
      DEBUG: "zigbee-herdsman*"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      docker.network: "{{ features.hass.network }}"
      traefik.enable: "true"
      traefik.http.routers.zigbee2mqtt.rule: "Host(`{{ features.hass.adapter.zigbee.hostname }}`)"
      traefik.http.routers.zigbee2mqtt.entrypoints: "web"
      traefik.http.routers.zigbee2mqtt.middlewares: "httpsredirect@file"
      traefik.http.routers.zigbee2mqtt-ssl.rule: "Host(`{{ features.hass.adapter.zigbee.hostname }}`)"
      traefik.http.routers.zigbee2mqtt-ssl.entrypoints: "websecure"
      traefik.http.routers.zigbee2mqtt-ssl.middlewares: "hsts@file,httpsredirect@file,fwauthmid"
      traefik.http.routers.zigbee2mqtt-ssl.tls.certresolver: "letsencrypt"
      traefik.http.routers.zigbee2mqtt-ssl.tls.options: "intermediate@file"
      traefik.http.services.zigbee2mqtt-ssl.loadbalancer.server.port: "8080"

    networks_cli_compatible: yes
    networks:
      - name: "{{ features.hass.network }}"
        ipv6_address: "{{ features.hass.adapter.zigbee.ipv6  }}"
    links:
      - "hass.broker"

- name: "Start Zigbee2MQTT container"
  docker_container:
    name: "hass.zigbee"
    state: started

- name: "Zigbee2MQTTAssistant"
  include: "zigbee-zigbee2mqttassistant.yml"
  when: 
    - features.hass.adapter.zigbee.admin_ipv6
    - features.hass.adapter.zigbee.admin_hostname