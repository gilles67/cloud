---
- name: "Add dns record for admin domain"
  nsupdate:
    key_name: "tsig-{{ nsupdate.zone }}"
    key_algorithm: "{{ nsupdate.tsig.algorithm | default('hmac-sha256') }}"
    key_secret: "{{ nsupdate.tsig.secret }}"
    server: "{{ nsupdate.server }}"
    zone: "{{ nsupdate.zone }}"
    type: "CNAME"
    record: "{{ current_item.database.mariadb.admin.hostname }}."
    value: "{{ current_item.proxy.hostname }}."
  when:
    - nsupdate.zone is defined
    - nsupdate.tsig is defined
    - nsupdate.server is defined
    - current_item.proxy.hostname is defined
    - current_item.database.mariadb.admin is defined

- name: "Create phpmyadmin container ⚠️ (Unsecured) 🔓"
  docker_container:
    name: "{{ current_item.name | default(fitem) | lower }}.mariadb.pma"
    state: present
    restart_policy: unless-stopped
    image: "phpmyadmin:{{ phpmyadmin_version }}"
    env:
      TZ: "{{ timezone }}"
      PMA_HOST: "{{ current_item.name | default(fitem) | lower }}.mariadb"
      MYSQL_ROOT_PASSWORD: "{{ current_item.database.mariadb.root_password }}"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      docker.network: "{{ current_item.network }}"
      traefik.enable: "true"
      traefik.http.routers.admindb.rule: "Host(`{{ current_item.database.mariadb.admin.hostname }}`)"
      traefik.http.routers.admindb.entrypoints: "web"
      traefik.http.routers.admindb.middlewares: "httpsredirect@file"
      traefik.http.routers.admindb-ssl.rule: "Host(`{{ current_item.database.mariadb.admin.hostname }}`)"
      traefik.http.routers.admindb-ssl.entrypoints: "websecure"
      traefik.http.routers.admindb-ssl.middlewares: "hsts@file,httpsredirect@file"
      traefik.http.routers.admindb-ssl.tls.certresolver: "letsencrypt"
      traefik.http.routers.admindb-ssl.tls.options: "intermediate@file"
      traefik.http.services.admindb-ssl.loadbalancer.server.port: "80"
    networks_cli_compatible: yes
    networks:
      - name: "{{ current_item.network }}"
        ipv6_address: "{{ urrent_item.database.mariadb.admin.ipv6 }}"
        ipv4_address: "{{ current_item.database.mariadb.admin.ipv4 | default(None) }}"
        links:
          - "{{ current_item.name | default(fitem) | lower }}.mariadb"
  when:
    - current_item.database.mariadb.admin is defined
    - not current_item.auth is defined


- name: "Create phpmyadmin container (secured) 🔒"
  docker_container:
    name: "{{ current_item.name | default(fitem) | lower }}.mariadb.pma"
    state: present
    restart_policy: unless-stopped
    image: "phpmyadmin:{{ phpmyadmin_version }}"
    env:
      TZ: "{{ timezone }}"
      PMA_HOST: "{{ current_item.name | default(fitem) | lower }}.mariadb"
      MYSQL_ROOT_PASSWORD: "{{ current_item.database.mariadb.root_password }}"
    labels:
      one.h42.nhfw.enable: "true"
      one.h42.nhfw.dns.register: "true"
      docker.network: "{{ current_item.network }}"
      traefik.enable: "true"
      traefik.http.routers.admindb.rule: "Host(`{{ current_item.database.mariadb.admin.hostname  }}`)"
      traefik.http.routers.admindb.entrypoints: "web"
      traefik.http.routers.admindb.middlewares: "httpsredirect@file"
      traefik.http.routers.admindb-ssl.rule: "Host(`{{ current_item.database.mariadb.admin.hostname  }}`)"
      traefik.http.routers.admindb-ssl.entrypoints: "websecure"
      traefik.http.routers.admindb-ssl.middlewares: "hsts@file,httpsredirect@file,fwauthmid"
      traefik.http.routers.admindb-ssl.tls.certresolver: "letsencrypt"
      traefik.http.routers.admindb-ssl.tls.options: "intermediate@file"
      traefik.http.services.admindb-ssl.loadbalancer.server.port: "80"
    networks_cli_compatible: yes
    networks:
      - name: "{{ current_item.network }}"
        ipv6_address: "{{ current_item.database.mariadb.admin.ipv6 }}"
        ipv4_address: "{{ current_item.database.mariadb.admin.ipv4 | default(None) }}"
        links:
          - "{{ current_item.name | default(fitem) | lower }}.mariadb"
  when:
    - current_item.database.mariadb.admin is defined
    - current_item.auth is defined

- name: Start mariadb container
  docker_container:
    name: "{{ current_item.name | default(fitem) | lower }}.mariadb.pma"
    state: started
  when:
    - current_item.database.mariadb.admin is defined
